@import "../../assets/css/variables.scss" ;
@import "../../assets/css/mixins.scss";

.block_input {
	width: 100%;
	position: relative;
	// padding-top: 15px;

	// @include respond-to(sm) {
	// 	padding-top: 10px;
	// }

	& label {
		display: block;
		transition: color $transition_fast;
		font-weight: 500;
		margin-bottom: 3px;
		color: var(--color_text);

		@include respond-to(sm) {
			margin-bottom: 3px;
		}

		@include respond-to(xs) {
			margin-bottom: 2px;
		}

		& > span {
			color: #F00;
		}
	}

	.input-wrapper {
		position: relative;
		border-bottom: 2px solid var(--color_main_bg);

		& input {
			font-size: 1rem;
			width: 100%;
			font-weight: 600;
			outline: none;
			padding: 11px 8px;
			border: 2px solid transparent;
			box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.20);
			color: var(--input_text);
			transition: background-color $transition_fast, border $transition_fast;
			border-radius: 5px;

			@include respond-to(sm) {
				font-size: 1rem;
				padding: 11px 12px;
			}

			@include respond-to(md) {
				font-size: 1rem;
				padding: 11px 16px;
			}

			&::placeholder { 
				color: var(--primary_text);
				opacity: .9;
			}
			  
		}
	}

	& [data-content="errorText"] {
		position: absolute;
		top: calc(100% + 3px);
		color: var(--input_incorrect);
		font-size: .9rem;
		font-weight: 600;
		display: none;
		&::before {
			content: attr(data-prefix-text);
		}
	}

	.icon_exclamation {
		width: 20px;
		height: 20px;
		position: absolute;
		right: 10px;
		top: 50%;
		transform: translate(-50%, -50%);
		transition: opacity $transition_fast;
		pointer-events: none;
		visibility: visible;
	}

	&.incorrect-value {
		& input {
			animation: inputshake 0.2s ease-in-out 2;
			border-color: var(--input_incorrect);
		}

		& [data-content="errorText"] {
			display: initial;
		}
	}

	@keyframes inputshake {
		0% {
			margin-left: 0rem;
		}
		25% {
			margin-left: 0.5rem;
		}
		75% {
			margin-left: -0.5rem;
		}
		100% {
			margin-left: 0rem;
		}
	}

	&_right {
		justify-content: flex-end;
	}
}

